<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.thishome.yuelitao_book.mapper.BookProductMapper">
    <resultMap id="BaseResultMap" type="xyz.thishome.yuelitao_book.pojo.BookProduct">
        <id column="Id" property="id" jdbcType="INTEGER"/>
        <result column="book_mch" property="bookMch" jdbcType="VARCHAR"/>
        <result column="book_tp" property="bookTp" jdbcType="VARCHAR"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="flbh" property="flbh" jdbcType="INTEGER"/>
        <result column="chjshj" property="chjshj" jdbcType="TIMESTAMP"/>
        <result column="book_info_short" property="bookInfoShort" jdbcType="VARCHAR"/>
        <result column="book_info_long" property="bookInfoLong" jdbcType="VARCHAR"/>
        <result column="kc" property="kc" jdbcType="INTEGER"/>
        <result column="jg" property="jg" jdbcType="INTEGER"/>
        <result column="xl" property="xl" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    Id, book_mch, book_tp, author, flbh, chjshj, book_info_short, book_info_long, kc,
    jg, xl, status
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="xyz.thishome.yuelitao_book.pojo.BookProductExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from book_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from book_product
        where Id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_product
    where Id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="xyz.thishome.yuelitao_book.pojo.BookProductExample">
        delete from book_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="xyz.thishome.yuelitao_book.pojo.BookProduct">
    insert into book_product (Id, book_mch, book_tp,
      author, flbh, chjshj,
      book_info_short, book_info_long, kc,
      jg, xl, status)
    values (#{id,jdbcType=INTEGER}, #{bookMch,jdbcType=VARCHAR}, #{bookTp,jdbcType=VARCHAR},
      #{author,jdbcType=VARCHAR}, #{flbh,jdbcType=INTEGER}, #{chjshj,jdbcType=TIMESTAMP},
      #{bookInfoShort,jdbcType=VARCHAR}, #{bookInfoLong,jdbcType=VARCHAR}, #{kc,jdbcType=INTEGER},
      #{jg,jdbcType=INTEGER}, #{xl,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="xyz.thishome.yuelitao_book.pojo.BookProduct">
        insert into book_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                Id,
            </if>
            <if test="bookMch != null">
                book_mch,
            </if>
            <if test="bookTp != null">
                book_tp,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="flbh != null">
                flbh,
            </if>
            <if test="chjshj != null">
                chjshj,
            </if>
            <if test="bookInfoShort != null">
                book_info_short,
            </if>
            <if test="bookInfoLong != null">
                book_info_long,
            </if>
            <if test="kc != null">
                kc,
            </if>
            <if test="jg != null">
                jg,
            </if>
            <if test="xl != null">
                xl,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bookMch != null">
                #{bookMch,jdbcType=VARCHAR},
            </if>
            <if test="bookTp != null">
                #{bookTp,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="flbh != null">
                #{flbh,jdbcType=INTEGER},
            </if>
            <if test="chjshj != null">
                #{chjshj,jdbcType=TIMESTAMP},
            </if>
            <if test="bookInfoShort != null">
                #{bookInfoShort,jdbcType=VARCHAR},
            </if>
            <if test="bookInfoLong != null">
                #{bookInfoLong,jdbcType=VARCHAR},
            </if>
            <if test="kc != null">
                #{kc,jdbcType=INTEGER},
            </if>
            <if test="jg != null">
                #{jg,jdbcType=INTEGER},
            </if>
            <if test="xl != null">
                #{xl,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="xyz.thishome.yuelitao_book.pojo.BookProductExample"
            resultType="java.lang.Integer">
        select count(*) from book_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update book_product
        <set>
            <if test="record.id != null">
                Id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.bookMch != null">
                book_mch = #{record.bookMch,jdbcType=VARCHAR},
            </if>
            <if test="record.bookTp != null">
                book_tp = #{record.bookTp,jdbcType=VARCHAR},
            </if>
            <if test="record.author != null">
                author = #{record.author,jdbcType=VARCHAR},
            </if>
            <if test="record.flbh != null">
                flbh = #{record.flbh,jdbcType=INTEGER},
            </if>
            <if test="record.chjshj != null">
                chjshj = #{record.chjshj,jdbcType=TIMESTAMP},
            </if>
            <if test="record.bookInfoShort != null">
                book_info_short = #{record.bookInfoShort,jdbcType=VARCHAR},
            </if>
            <if test="record.bookInfoLong != null">
                book_info_long = #{record.bookInfoLong,jdbcType=VARCHAR},
            </if>
            <if test="record.kc != null">
                kc = #{record.kc,jdbcType=INTEGER},
            </if>
            <if test="record.jg != null">
                jg = #{record.jg,jdbcType=INTEGER},
            </if>
            <if test="record.xl != null">
                xl = #{record.xl,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update book_product
        set Id = #{record.id,jdbcType=INTEGER},
        book_mch = #{record.bookMch,jdbcType=VARCHAR},
        book_tp = #{record.bookTp,jdbcType=VARCHAR},
        author = #{record.author,jdbcType=VARCHAR},
        flbh = #{record.flbh,jdbcType=INTEGER},
        chjshj = #{record.chjshj,jdbcType=TIMESTAMP},
        book_info_short = #{record.bookInfoShort,jdbcType=VARCHAR},
        book_info_long = #{record.bookInfoLong,jdbcType=VARCHAR},
        kc = #{record.kc,jdbcType=INTEGER},
        jg = #{record.jg,jdbcType=INTEGER},
        xl = #{record.xl,jdbcType=INTEGER},
        status = #{record.status,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="xyz.thishome.yuelitao_book.pojo.BookProduct">
        update book_product
        <set>
            <if test="bookMch != null">
                book_mch = #{bookMch,jdbcType=VARCHAR},
            </if>
            <if test="bookTp != null">
                book_tp = #{bookTp,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="flbh != null">
                flbh = #{flbh,jdbcType=INTEGER},
            </if>
            <if test="chjshj != null">
                chjshj = #{chjshj,jdbcType=TIMESTAMP},
            </if>
            <if test="bookInfoShort != null">
                book_info_short = #{bookInfoShort,jdbcType=VARCHAR},
            </if>
            <if test="bookInfoLong != null">
                book_info_long = #{bookInfoLong,jdbcType=VARCHAR},
            </if>
            <if test="kc != null">
                kc = #{kc,jdbcType=INTEGER},
            </if>
            <if test="jg != null">
                jg = #{jg,jdbcType=INTEGER},
            </if>
            <if test="xl != null">
                xl = #{xl,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where Id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="xyz.thishome.yuelitao_book.pojo.BookProduct">
    update book_product
    set book_mch = #{bookMch,jdbcType=VARCHAR},
      book_tp = #{bookTp,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      flbh = #{flbh,jdbcType=INTEGER},
      chjshj = #{chjshj,jdbcType=TIMESTAMP},
      book_info_short = #{bookInfoShort,jdbcType=VARCHAR},
      book_info_long = #{bookInfoLong,jdbcType=VARCHAR},
      kc = #{kc,jdbcType=INTEGER},
      jg = #{jg,jdbcType=INTEGER},
      xl = #{xl,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>

    <!--//获取状态为1的图书，获取前num本-->
    <!--List<BookProduct> getBookHotForNum(Integer num);-->
    <select id="getBookHotForNum" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_product
        <where>
            `status` = 1
        </where>
        LIMIT #{num}
    </select>


    <!--//获取销量前num的书-->
    <!--List<BookProduct> getBookXlTopList(Integer num);-->
    <select id="getBookXlTopList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_product
        <where>
            `status` = 1
        </where>
        ORDER BY xl DESC
        LIMIT #{num}
    </select>


</mapper>